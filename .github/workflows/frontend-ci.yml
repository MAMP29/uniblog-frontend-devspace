name: Frontend CI
on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [ "develop", "main" ]

jobs:
  build-lint-test:
    name: Build, Lint & Test Frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    permissions:
      contents: read
      actions: read
    steps:
    - name: Checkout PR code (from fork)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run Linter
      run: npm run lint

    - name: Build Project
      run: npm run build

    - name: Run Tests
      run: npm test -- --coverage

    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/lcov.info

  sonar_scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-lint-test
    permissions:
      contents: read
      pull-requests: write
      security-events: write
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Download Coverage Report
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coverage/

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
