name: Frontend CI
on:
  push:
    branches: [ "feature/**" ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "develop", "main" ]
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [ "develop", "main" ]

jobs:
  # Job 1: Build, Lint & Test (Seguro para ejecutar código del fork)
  build-lint-test:
    name: Build, Lint & Test Frontend
    runs-on: ubuntu-latest
    # Ahora también se ejecuta para pull_request_target
    if: github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'pull_request_target'
    # Limitar permisos para este job
    permissions:
      contents: read
      actions: read
    strategy:
      matrix:
        node-version: [22.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        # Para pull_request_target, hacer checkout del código del PR (head)
        ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Linter (ESLint)
      run: npm run lint
    
    - name: Build Project
      run: npm run build
    
    - name: Run Tests
      run: npm test -- --coverage
    
    # Subir el reporte de cobertura como un Artifact
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/lcov.info
      if: always()

  # Job 2: SonarCloud Scan (Seguro, se ejecuta en el repositorio base con secretos)
  sonar_scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target'
    needs: build-lint-test
    # Permisos explícitos para SonarCloud
    permissions:
      contents: read
      pull-requests: write
      security-events: write
    steps:
    - name: Checkout repository (Base Branch)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    # Descargar el reporte de cobertura
    - name: Download Coverage Report
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coverage/
    
    - name: Set up Node.js for Sonar Scan
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'
    
    - name: Install dependencies for Sonar Scan (if needed for analysis)
      run: npm ci
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}